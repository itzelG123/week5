# Tuples Practice #1
#tuples are immutable and are defined using parentheses
# Create a tuple called my_tuple with the following values:
# 1, 2, 3, 4, 5, 6, 7, 8, 9, 10
# do it
# my_tuple = (1, 2, 3, 4, 5, 6, 7, 8, 9, 10)
# Display the tuple on the screen.
# print(my_tuple)
# when are they useful?
# Tuples are useful when you want to store a collection of items that should not be changed, such as days of the week, months of the year, etc.






# Use a tuple method to count the number of times the value 2 appears in the following tuple, and display the result (integer) on the screen:


# my_tuple = (1, 2, 3, 2, 3, 1, 3, 2, 3, 3, 3, 1, 3, 2, 2, 1, 3, 2)


# Tuples Practice #2
# Convert the following tuple to a list, and store it in a variable called my_list.


# my_tuple = (1, 2, 3, 2, 3, 1, 3, 2)


# Tuples Practice #3
# Extract the elements of the following tuple into four variables: a, b, c, d


# my_tuple = (1, 2, 3, 4)


###############################SETS########################################
# Sets Practice #1
# Join the following sets into one, called my_set_3:
# {1, 2, "three", "four"}
# {"three", 4, 5}
# my_set_1 = {1, 2, "three", "four"}


# my_set_2 = {"three", 4, 5}


# Sets Practice #2
# Remove a random item from the following set, using set methods.
# raffle = {"Rachel", "Monica", "Phoebe", "Joey", "Chandler", "Ross"}


# Sets Practice #3
# Add the name Gunther to the following set, using set methods:
# raffle = {"Rachel", "Monica", "Phoebe", "Joey", "Chandler", "Ross"}


###########################Booleans#######################################


# Booleans Practice #1
# Make a comparison that returns a boolean and store the result (True/False) in a variable called test


# Booleans Practice #2
# Check if 17834/34 is greater than 87*56 and print the boolean result to the screen using print()


# Booleans Practice #3
# Check if the square root of 25 is equal to 5 and display the result (boolean) on the screen using print()


###############################Proceed to last slide#################################

